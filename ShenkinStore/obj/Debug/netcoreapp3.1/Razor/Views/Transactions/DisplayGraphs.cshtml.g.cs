#pragma checksum "C:\Users\yarinmeron\source\repos\ShenkinStore\ShenkinStore\Views\Transactions\DisplayGraphs.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "bacec370d68b64de351f2a27a26b656670fb8e5e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Transactions_DisplayGraphs), @"mvc.1.0.view", @"/Views/Transactions/DisplayGraphs.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\yarinmeron\source\repos\ShenkinStore\ShenkinStore\Views\_ViewImports.cshtml"
using ShenkinStore;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Users\yarinmeron\source\repos\ShenkinStore\ShenkinStore\Views\Transactions\DisplayGraphs.cshtml"
using ShenkinStore.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bacec370d68b64de351f2a27a26b656670fb8e5e", @"/Views/Transactions/DisplayGraphs.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"878522bbb99fe5cc18380b941aef29d870928c4d", @"/Views/_ViewImports.cshtml")]
    public class Views_Transactions_DisplayGraphs : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "C:\Users\yarinmeron\source\repos\ShenkinStore\ShenkinStore\Views\Transactions\DisplayGraphs.cshtml"
  
    ViewData["Title"] = "Displaygraphs";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n\r\n");
#nullable restore
#line 9 "C:\Users\yarinmeron\source\repos\ShenkinStore\ShenkinStore\Views\Transactions\DisplayGraphs.cshtml"
  
    List<User> _users = ViewBag.users;
    List<Transaction> _transaction = ViewBag.transactions;

    int regularUsers = _users.Where(user => (int)user.userType == 0).Count();
    int AdminUsers = _users.Where(user => (int)user.userType == 1).Count();

#line default
#line hidden
#nullable disable
            WriteLiteral("<h1 style=\"text-align:center;\">Monthly Transactions</h1>\r\n<!-- First Chart -->\r\n<center>\r\n    <div id=\"app\">\r\n        <div id=\"chart\">\r\n            <svg id=\"firstSvg\"></svg>\r\n        </div>\r\n");
            WriteLiteral(@"    </div>
    </div>
</center>

<!-- Imports d3js libraries -->
<script src=""https://d3js.org/d3.v5.js""></script>
<script src=""https://d3js.org/d3-scale.v3.min.js""></script>
<script src=""https://d3js.org/d3-axis.v1.min.js""></script>

<!-- First chart script -->
<script type=""text/javascript"">

    var DATA = [
        { id: 'd2', Amount: ");
#nullable restore
#line 38 "C:\Users\yarinmeron\source\repos\ShenkinStore\ShenkinStore\Views\Transactions\DisplayGraphs.cshtml"
                       Write(_transaction.Where(o=> o.TransDate.Month == 2).ToList().Count);

#line default
#line hidden
#nullable disable
            WriteLiteral(", month: \'February\' },\r\n        { id: \'d2\', Amount: ");
#nullable restore
#line 39 "C:\Users\yarinmeron\source\repos\ShenkinStore\ShenkinStore\Views\Transactions\DisplayGraphs.cshtml"
                       Write(_transaction.Where(o=> o.TransDate.Month == 2).ToList().Count);

#line default
#line hidden
#nullable disable
            WriteLiteral(", month: \'February\' },\r\n        { id: \'d3\', Amount: ");
#nullable restore
#line 40 "C:\Users\yarinmeron\source\repos\ShenkinStore\ShenkinStore\Views\Transactions\DisplayGraphs.cshtml"
                       Write(_transaction.Where(o=> o.TransDate.Month == 3).ToList().Count);

#line default
#line hidden
#nullable disable
            WriteLiteral(", month: \'March\' },\r\n        { id: \'d4\', Amount: ");
#nullable restore
#line 41 "C:\Users\yarinmeron\source\repos\ShenkinStore\ShenkinStore\Views\Transactions\DisplayGraphs.cshtml"
                       Write(_transaction.Where(o=> o.TransDate.Month == 4).ToList().Count);

#line default
#line hidden
#nullable disable
            WriteLiteral(", month: \'April\' },\r\n        { id: \'d5\', Amount: ");
#nullable restore
#line 42 "C:\Users\yarinmeron\source\repos\ShenkinStore\ShenkinStore\Views\Transactions\DisplayGraphs.cshtml"
                       Write(_transaction.Where(o=> o.TransDate.Month == 5).ToList().Count);

#line default
#line hidden
#nullable disable
            WriteLiteral(" , month: \'May\' },\r\n        { id: \'d1\', Amount: ");
#nullable restore
#line 43 "C:\Users\yarinmeron\source\repos\ShenkinStore\ShenkinStore\Views\Transactions\DisplayGraphs.cshtml"
                       Write(_transaction.Where(o=> o.TransDate.Month == 1).ToList().Count);

#line default
#line hidden
#nullable disable
            WriteLiteral(" , month: \'January\' },\r\n        { id: \'d6\', Amount: ");
#nullable restore
#line 44 "C:\Users\yarinmeron\source\repos\ShenkinStore\ShenkinStore\Views\Transactions\DisplayGraphs.cshtml"
                       Write(_transaction.Where(o=> o.TransDate.Month == 6).ToList().Count);

#line default
#line hidden
#nullable disable
            WriteLiteral(" , month: \'June\' },\r\n        { id: \'d7\', Amount: ");
#nullable restore
#line 45 "C:\Users\yarinmeron\source\repos\ShenkinStore\ShenkinStore\Views\Transactions\DisplayGraphs.cshtml"
                       Write(_transaction.Where(o=> o.TransDate.Month == 7).ToList().Count);

#line default
#line hidden
#nullable disable
            WriteLiteral(" , month: \'July\' },\r\n        { id: \'d8\', Amount: ");
#nullable restore
#line 46 "C:\Users\yarinmeron\source\repos\ShenkinStore\ShenkinStore\Views\Transactions\DisplayGraphs.cshtml"
                       Write(_transaction.Where(o=> o.TransDate.Month == 8).ToList().Count);

#line default
#line hidden
#nullable disable
            WriteLiteral(" , month: \'August\' },\r\n        { id: \'d9\', Amount: ");
#nullable restore
#line 47 "C:\Users\yarinmeron\source\repos\ShenkinStore\ShenkinStore\Views\Transactions\DisplayGraphs.cshtml"
                       Write(_transaction.Where(o=> o.TransDate.Month == 9).ToList().Count);

#line default
#line hidden
#nullable disable
            WriteLiteral(", month: \'September\' },\r\n        { id: \'d10\', Amount:");
#nullable restore
#line 48 "C:\Users\yarinmeron\source\repos\ShenkinStore\ShenkinStore\Views\Transactions\DisplayGraphs.cshtml"
                       Write(_transaction.Where(o=> o.TransDate.Month == 10).ToList().Count);

#line default
#line hidden
#nullable disable
            WriteLiteral(", month: \'October\' },\r\n        { id: \'d11\', Amount:");
#nullable restore
#line 49 "C:\Users\yarinmeron\source\repos\ShenkinStore\ShenkinStore\Views\Transactions\DisplayGraphs.cshtml"
                       Write(_transaction.Where(o=> o.TransDate.Month == 11).ToList().Count);

#line default
#line hidden
#nullable disable
            WriteLiteral(", month: \'November\' },\r\n        { id: \'d12\', Amount:");
#nullable restore
#line 50 "C:\Users\yarinmeron\source\repos\ShenkinStore\ShenkinStore\Views\Transactions\DisplayGraphs.cshtml"
                       Write(_transaction.Where(o=> o.TransDate.Month == 12).ToList().Count);

#line default
#line hidden
#nullable disable
            WriteLiteral(@", month: 'December' }];
    var margins = { top: 20, bottom: 10 };
    var chartWidth = 1000, chartHegiht = 400 - margins.top - margins.bottom;
    var xScale = d3.scaleBand().domain(DATA.map((dataPoint) => dataPoint.month)).rangeRound([0, chartWidth]).padding(0.2);
    var yScale = d3.scaleLinear().domain([0, d3.max(DATA, data => data.Amount) + 1]).range([chartHegiht, 0]);
    var selectedData = DATA;
    var chartContainer = d3.select('#firstSvg')
        .attr('width', chartWidth)
        .attr('height', chartHegiht + margins.top + margins.bottom)
        .append('g');
    var chart = chartContainer;
    // Create the bars
    function renderChart() {
        chart
            .selectAll('.bar')
            .data(selectedData, data => data.id)
            .enter()
            .append('rect')
            .classed('bar', true)
            .attr('width', xScale.bandwidth())
            .attr('height', data => chartHegiht - yScale(data.Amount))
            .attr('x', data => xScale(data.mo");
            WriteLiteral(@"nth))
            .attr('y', data => yScale(data.Amount));
        chart
            .selectAll('.bar')
            .data(selectedData, data => data.id)
            .exit()
            .remove();
        // Add Text
        chart
            .selectAll('.label')
            .data(selectedData, data => data.id)
            .enter()
            .append('text')
            .text(data => data.Amount)
            .attr('x', data => xScale(data.month) + xScale.bandwidth() / 2)
            .attr('y', data => yScale(data.Amount) - 10)
            .attr('text-anchor', 'middle')
            .classed('label', true);
        chart
            .selectAll('.label')
            .data(selectedData, data => data.id)
            .exit()
            .remove();
    }
    renderChart();
    // Add x line
    chart
        .append('g')
        .call(d3.axisBottom(xScale))
        .attr('transform', `translate(0,${chartHegiht + 5})`)
        .attr('color', '#4f000e');
    var unselected = [];
    var");
            WriteLiteral(@" listItem = d3
        .select('#data')
        .select('ul')
        .selectAll('li')
        .data(DATA)
        .enter()
        .append('li')
        .append('span')
        .text(data => data.month)
        .append('input')
        .attr('type', 'checkbox')
        .attr('checked', true)
        .on('change', (data) => {
            if (unselected.indexOf(data.id) == -1) {
                unselected.push(data.id);
            } else {
                unselected = unselected.filter(id => id != data.id)
            }
            selectedData = DATA.filter(data => unselected.indexOf(data.id) == -1);
            renderChart();
        });
</script>

<!-- Second Chart -->
<center>
    <div id=""secondApp"">
        <div id=""secondChart"">
            <svg id=""secondSvg""></svg>
        </div>
        <div id=""secondData"">
            <ul>
                <li>
                    <span style=""background-color: yellow;""> &nbsp; </span> &nbsp;&nbsp; Admin users &nbsp;&nbsp; ");
#nullable restore
#line 135 "C:\Users\yarinmeron\source\repos\ShenkinStore\ShenkinStore\Views\Transactions\DisplayGraphs.cshtml"
                                                                                                             Write(AdminUsers);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                </li>\r\n                <li>\r\n                    <span style=\"background-color: blue;\"> &nbsp; </span> &nbsp;&nbsp; Regular users &nbsp;&nbsp; ");
#nullable restore
#line 138 "C:\Users\yarinmeron\source\repos\ShenkinStore\ShenkinStore\Views\Transactions\DisplayGraphs.cshtml"
                                                                                                             Write(regularUsers);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</center>\r\n<!-- Second chart script -->\r\n<script type=\"text/javascript\">\r\n    var DATA2 = { a: ");
#nullable restore
#line 146 "C:\Users\yarinmeron\source\repos\ShenkinStore\ShenkinStore\Views\Transactions\DisplayGraphs.cshtml"
                Write(regularUsers);

#line default
#line hidden
#nullable disable
            WriteLiteral(", b: ");
#nullable restore
#line 146 "C:\Users\yarinmeron\source\repos\ShenkinStore\ShenkinStore\Views\Transactions\DisplayGraphs.cshtml"
                                  Write(AdminUsers);

#line default
#line hidden
#nullable disable
            WriteLiteral(@" }
    var width = 450, height = 450, margin = 40;
    var radius = Math.min(width, height) / 2 - margin;
    var container = d3
        .select('#secondSvg')
        .attr(""width"", width)
        .attr(""height"", height)
        .append(""g"")
        .attr(""transform"", ""translate("" + width / 2 + "","" + height / 2 + "")"");
    var pie = d3.pie()
        .value(data => data.value)
    var data_ready = pie(d3.entries(DATA2))
    var color = 'blue';
    container
        .selectAll('groups')
        .data(data_ready)
        .enter()
        .append('path')
        .attr('d', d3.arc()
            .innerRadius(0)
            .outerRadius(radius)
        )
        .attr('fill', () => {
            if (color == 'blue') { color = 'yellow'; return 'blue'; } else return 'yellow';
        })
        .attr(""stroke"", ""black"")
        .style(""stroke-width"", ""2px"")
        .style(""opacity"", 0.7);
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
